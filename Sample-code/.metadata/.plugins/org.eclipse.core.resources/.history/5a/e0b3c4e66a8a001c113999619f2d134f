package ee.ut.cs.ds.sample.rpc;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.util.UUID;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class TestExample {

    Server rpcserver = null;
    public static void main(String[] args) {
        int port = 5680;
        TestExample test = new TestExample();
        test.doing(port);

        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

//        test.stopRpcServer();

    }

    public void doing(final int port){

        new Thread(new Runnable() {
            public void run() {
                rpcserver = (Server) new ServiceCenter(port);
                // Register the remote class HelloserviceImpl to RPC Service Center to call
                rpcserver.register(HelloService.class, HelloServiceImpl.class);
                try {
					rpcserver.start();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}//  Start RPC Service Center
            }
        }).start();


        //  Simulation multiple call remote methods
        ExecutorService clientes = Executors.newCachedThreadPool();
        for (int i = 0; i < 10; i++) {
            clientes.execute(new Runnable() {
                public void run() {
                    HelloService service = RPCClient.getRemoteProxyObj(HelloService.class, new InetSocketAddress("127.0.0.1", port));
                    System.out.println(service.sayHello("jacke "+UUID.randomUUID().toString().substring(0, 6)));
                }
            });
        }

    }

    public void stopRpcServer(){
        rpcserver.stop();
    }

}